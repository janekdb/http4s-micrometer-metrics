version: 2.1

defaults:
- &restore_cache
  restore_cache:
    keys:
    - sbt-dependencies-{{ checksum "build.sbt" }}
    - sbt-dependencies

- &save_cache
  save_cache:
    key: sbt-dependencies-{{ checksum "build.sbt" }}
    paths:
    - /home/circleci/.sbt
    - /home/circleci/.ivy2

- &add_github_host_ssh_key
  run:
    name: Configure git credentials
    command: |
      echo 'Adding the github host SSH key...'
      mkdir -p -m 0700 ~/.ssh/
      ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      
- &setup-git-credentials
  run:
    name: Configure git credentials
    command: |
      git config user.name ovo-comms-circleci
      git config user.email "hello.comms@ovoenergy.com"

executors:
  docker:
    docker:
    - image: circleci/openjdk:8-jdk
    environment:
      JAVA_OPTS: "-Xmx1g -XX:MaxMetaspaceSize=1g -XX:MetaspaceSize=1g -XX:+CMSClassUnloadingEnabled"
      DEFAULT_AWS_REGION: "eu-west-1"
      AWS_REGION: "eu-west-1"

  machine:
    machine:
      enabled: true
      image: circleci/classic:edge

    environment:
      JAVA_OPTS: "-Xmx1g -XX:MaxMetaspaceSize=1g -XX:MetaspaceSize=1g -XX:+CMSClassUnloadingEnabled"
      DEFAULT_AWS_REGION: "eu-west-1"
      AWS_REGION: "eu-west-1"

jobs:
  build:

    executor: docker

    steps:

    - checkout

    - *restore_cache

    - run:
        command: sbt update
        no_output_timeout: 20m

    - *save_cache

    - run:
        command: sbt scalafmtCheck

    - run:
        command: sbt test:scalafmtCheck

    - run:
        command: sbt it:scalafmtCheck

    - run:
        command: sbt test:compile
        no_output_timeout: 20m

    - persist_to_workspace:
        root: .
        paths:
        - target
        - project/target
        - project/project/target

  unit_test:

    executor: docker

    steps:

    - checkout

    - *restore_cache

    - attach_workspace:
        at: .

    - run:
        command: sbt test
        no_output_timeout: 20m

    - store_test_results:
        path: target/test-reports


  tag:

    executor: docker

    steps:

    - checkout

    - attach_workspace:
        at: .

    - *add_github_host_ssh_key

    - *configure_git_credentials

    - run:
        command: "build/tag.sh"

    # Update the workspace to make sure the git tags are available to the
    # downstream jobs
    - persist_to_workspace:
        root: .
        paths:
        - .git

  release:

    executor: docker

    steps:

    - checkout

    - *restore_cache

    - attach_workspace:
        at: .

    - run:
        command: "sbt releaseEarly"
        no_output_timeout: 20m

workflows:

  main:
    jobs:
    - build

    - unit_test:
        requires:
        - build

    - tag:
        requires:
        - unit_test
        filters:
          branches:
            only: master

    - release:
        requires:
        - tag
